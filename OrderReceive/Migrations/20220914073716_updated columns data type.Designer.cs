// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderReceive.DBContexts;

namespace OrderReceive.Migrations
{
    [DbContext(typeof(OrderReceiveDbContext))]
    [Migration("20220914073716_updated columns data type")]
    partial class updatedcolumnsdatatype
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrderReceive.Entities.OrderChangeProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("InsertedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderChangeType")
                        .HasColumnType("int");

                    b.Property<string>("Order_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("OrderChangeProduct");
                });

            modelBuilder.Entity("OrderReceive.Entities.OrderHeader", b =>
                {
                    b.Property<Guid>("OrderHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Billed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Order_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderHeaderId");

                    b.ToTable("OrderHeader");

                    b.HasData(
                        new
                        {
                            OrderHeaderId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Active = true,
                            Billed = "No",
                            Company_Code = "ABC",
                            Company_Name = "ABC",
                            CreatedBy = "User1",
                            CreatedDate = "1/1/0001 12:00:00 AM",
                            CreatedTime = "00:00:00",
                            Customer_Code = "CUSTOMER_1",
                            Customer_Name = "Customer Name 1",
                            IsDeleted = false,
                            Order_Code = "ORDER_001",
                            Order_Date = "20-01-2022",
                            Order_Status = "Created",
                            Order_Time = "10:00:00",
                            Order_Type = "Manual",
                            Warehouse_Code = "WAREHOUSE_1",
                            Warehouse_Name = "Warehouse Name 1"
                        },
                        new
                        {
                            OrderHeaderId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Active = true,
                            Billed = "No",
                            Company_Code = "ABC",
                            Company_Name = "ABC",
                            CreatedBy = "User1",
                            CreatedDate = "1/1/0001 12:00:00 AM",
                            CreatedTime = "00:00:00",
                            Customer_Code = "CUSTOMER_1",
                            Customer_Name = "Customer Name 1",
                            IsDeleted = false,
                            Order_Code = "ORDER_002",
                            Order_Date = "20-01-2022",
                            Order_Status = "Created",
                            Order_Time = "10:00:00",
                            Order_Type = "Manual",
                            Warehouse_Code = "WAREHOUSE_1",
                            Warehouse_Name = "Warehouse Name 1"
                        });
                });

            modelBuilder.Entity("OrderReceive.Entities.OrderLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Company_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Order_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyAllocated")
                        .HasColumnType("int");

                    b.Property<int>("QtyOrdered")
                        .HasColumnType("int");

                    b.Property<int>("QtyPerBox")
                        .HasColumnType("int");

                    b.Property<int>("QtyPicked")
                        .HasColumnType("int");

                    b.Property<int>("QtyPlanned")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderHeaderId");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Active = true,
                            Company_Code = "ABC",
                            Company_Name = "ABC",
                            CreatedBy = "User1",
                            CreatedDate = "1/1/0001 12:00:00 AM",
                            CreatedTime = "00:00:00",
                            Customer_Code = "CUSTOMER_1",
                            Customer_Name = "Customer Name 1",
                            IsDeleted = false,
                            LineId = "ORDER_LINE_001",
                            OrderHeaderId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Order_Code = "ORDER_001",
                            ProductCode = "Laptop",
                            ProductDescription = "Laptop",
                            QtyAllocated = 0,
                            QtyOrdered = 10,
                            QtyPerBox = 5,
                            QtyPicked = 0,
                            QtyPlanned = 10,
                            Status = "Created",
                            Unit = "10",
                            Warehouse_Code = "WAREHOUSE_1",
                            Warehouse_Name = "Warehouse Name 1"
                        },
                        new
                        {
                            Id = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Active = true,
                            Company_Code = "ABC",
                            Company_Name = "ABC",
                            CreatedBy = "User1",
                            CreatedDate = "1/1/0001 12:00:00 AM",
                            CreatedTime = "00:00:00",
                            Customer_Code = "CUSTOMER_1",
                            Customer_Name = "Customer Name 1",
                            IsDeleted = false,
                            LineId = "ORDER_LINE_002",
                            OrderHeaderId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Order_Code = "ORDER_001",
                            ProductCode = "Mobile",
                            ProductDescription = "Mobile",
                            QtyAllocated = 0,
                            QtyOrdered = 10,
                            QtyPerBox = 5,
                            QtyPicked = 0,
                            QtyPlanned = 10,
                            Status = "Created",
                            Unit = "10",
                            Warehouse_Code = "WAREHOUSE_1",
                            Warehouse_Name = "Warehouse Name 1"
                        },
                        new
                        {
                            Id = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            Active = true,
                            Company_Code = "ABC",
                            Company_Name = "ABC",
                            CreatedBy = "User1",
                            CreatedDate = "1/1/0001 12:00:00 AM",
                            CreatedTime = "00:00:00",
                            Customer_Code = "CUSTOMER_1",
                            Customer_Name = "Customer Name 1",
                            IsDeleted = false,
                            LineId = "ORDER_LINE_003",
                            OrderHeaderId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Order_Code = "ORDER_002",
                            ProductCode = "Charger",
                            ProductDescription = "Charger",
                            QtyAllocated = 0,
                            QtyOrdered = 10,
                            QtyPerBox = 5,
                            QtyPicked = 0,
                            QtyPlanned = 10,
                            Status = "Created",
                            Unit = "5",
                            Warehouse_Code = "WAREHOUSE_1",
                            Warehouse_Name = "Warehouse Name 1"
                        },
                        new
                        {
                            Id = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            Active = true,
                            Company_Code = "ABC",
                            Company_Name = "ABC",
                            CreatedBy = "User1",
                            CreatedDate = "1/1/0001 12:00:00 AM",
                            CreatedTime = "00:00:00",
                            Customer_Code = "CUSTOMER_1",
                            Customer_Name = "Customer Name 1",
                            IsDeleted = false,
                            LineId = "ORDER_LINE_004",
                            OrderHeaderId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Order_Code = "ORDER_002",
                            ProductCode = "Mobile",
                            ProductDescription = "Mobile",
                            QtyAllocated = 0,
                            QtyOrdered = 10,
                            QtyPerBox = 10,
                            QtyPicked = 0,
                            QtyPlanned = 10,
                            Status = "Created",
                            Unit = "10",
                            Warehouse_Code = "WAREHOUSE_1",
                            Warehouse_Name = "Warehouse Name 1"
                        });
                });

            modelBuilder.Entity("OrderReceive.Entities.Products", b =>
                {
                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Product = "Laptop",
                            Unit = "Qty"
                        },
                        new
                        {
                            Product = "Mobile",
                            Unit = "Qty"
                        },
                        new
                        {
                            Product = "Charger",
                            Unit = "Qty"
                        });
                });

            modelBuilder.Entity("OrderReceive.Entities.OrderLines", b =>
                {
                    b.HasOne("OrderReceive.Entities.OrderHeader", "OrderHeader")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderHeader");
                });

            modelBuilder.Entity("OrderReceive.Entities.OrderHeader", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
